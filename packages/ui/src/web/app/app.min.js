const parseJwt=e=>{if("string"==typeof e){var t=e.split(".")[1].replace(/-/g,"+").replace(/_/g,"/"),s=decodeURIComponent(window.atob(t).split("").map((function(e){return"%"+("00"+e.charCodeAt(0).toString(16)).slice(-2)})).join(""));return JSON.parse(s)}},axiosPost=async(e,t,s)=>await axios.post(e,t,{headers:s}),axiosGet=async(e,t)=>await axios.get(e,{headers:t}),apiPost=async(e,t)=>{try{const s=Cookies.get("access_token"),a=await axiosPost(`${getAppUrl()}${e}`,t,s&&{authorization:`bearer ${s}`});return{data:a.data,status:a.status}}catch(e){if(console.log(e),e.response.status&&"number"==typeof e.response.status&&401===e.response.status)Cookies.remove("access_token")}},apiGet=async e=>{try{const t=Cookies.get("access_token"),s=await axiosGet(`${getAppUrl()}${e}`,t&&{authorization:`bearer ${t}`});return{data:s.data,status:s.status}}catch(e){if(console.log(e),e.response.status&&"number"==typeof e.response.status&&401===e.response.status)Cookies.remove("access_token")}},toggleActive=(e,t,s=!0)=>{t.toggleClass("rounded-circle",!s).toggleClass("rounded-25",s),e.toggleClass("selected",s)},showLoadingDiv=e=>{$("#loading").toggleClass("d-none",!e)},showServerManagement=(e=!0)=>{$("#select-server").toggleClass("d-none",e),$("#server-management").toggleClass("d-none",!e)},setServerInfo=e=>{document.getElementById("server-name").innerText=e.guild_name;const t=data.guild_icon??`https://ui-avatars.com/api/?name=${e.guild_name}`;document.getElementById("server-icon").src=t},getParams=()=>{const e=window.location.search;return new URLSearchParams(e)},isDev=()=>{const e=getParams();return null!=e.get("dev")&&"1"===e.get("dev")},getEnv=()=>{const e=getParams();return null==e.get("env")?"prod":e.get("env")},getAppUrl=()=>{if(isDev)return"http://localhost:8080";switch(getEnv()){case"prod":default:return"https://<url_here>";case"prodTest":return"https://prod-test.<url_here>";case"devTest":return"https://dev-test.<url_here>"}},getOauthUrl=async()=>{const e=await apiGet("/oauth/url");if(null!=e.data.url)return e.data.url},getToken=async e=>{const t=await apiPost("/oauth/exchange",{code:e});if(null!=t.data)return t.data},configureUser=async()=>{const e=getParams().get("code"),t=Cookies.get("access_token");if(t&&e&&Cookies.remove("access_token"),e){const t=await getToken(e);if(window.history.pushState({},"Discord Management UI",window.location.origin),console.log("token",t),null==t||null==t.access_token)return;const s=parseJwt(t.access_token);console.log("at",t.accessToken,"jwt parsed",s);const a=new Date(Date.now()+s.exp-100);Cookies.set("access_token",t.access_token,{expires:a})}else if(null==t&&null==e){const e=await getOauthUrl();if(null==e)return;window.location.href=e}},getMe=async()=>apiGet("/me/info"),getGuilds=async()=>apiGet("/me/guilds"),getGuildInfo=async e=>apiGet(`/guilds/${e}`),getGuildPermissions=async e=>apiGet(`/guilds/${e}/permissions`),getGuildRoles=async e=>apiGet(`/guilds/${e}/roles`),getGuildRssFeeds=async e=>apiGet(`/guilds/${e}/rss/feeds`),getGuildFeed=async(e,t)=>apiGet(`/guilds/${e}/rss/feed/${t}`),getGuildChannels=async e=>apiGet(`/guilds/${e}/channels`),configureTooltips=()=>{document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach((e=>{const t=new bootstrap.Tooltip(e);e.addEventListener("click",(function(){t.hide()}))}))},updateHtmlElements=async(e,t,s)=>{const{parentElm:a,childElm:n}=e;a&&a.toggleClass("active",!1).toggleClass("selected",!1),t.toggleClass("active",!0).toggleClass("selected",!0),e.parentElm=t,n&&n.toggleClass("rounded-circle",!0).toggleClass("rounded-25",!1),s.toggleClass("rounded-circle",!1).toggleClass("rounded-25",!0),e.childElm=s},setServerSelected=(e,t)=>{e.serverId=t},setActiveTab=(e,t)=>{e.previousTab=e.tab,console.log(`updating tab from ${e.previousTab} to ${t}`),e.tab=t},setActiveRole=(e,t)=>{e.rolesContext=e.rolesContext??[],e.rolesContext.editRoleId=t},setActiveFeed=(e,t)=>{e.rssContext=e.rssContext??[],e.rssContext.feed=null!=t?t.data:null},setLoading=e=>{$("#app-loading").toggleClass("d-none",!e)},getParentAndChildElm=e=>{if(null==e)return;return{parentElm:e.parent(),childElm:e.children().first()}},updateInfoTab=e=>{if("info-tab"!==e.tab)return;if(null==e.guildInfo)return;const{guild_name:t,guild_icon:s}=e.guildInfo;null!=t&&null!=s&&($("#server-name").text(t),$("#server-icon").attr("src",s))},updateUserInfo=e=>{$("#user-name").text(e.username),$("#user-icon").attr("src",e.avatarURL??`https://ui-avatars.com/api/?name=${guild.guild_name}`)},updateGuildsSidebar=e=>{$("#server-list").empty(),null!=e&&0!==e.length&&e.forEach((e=>{$("#server-list").append(`\n        <li class="nav-item">\n            <a href="#" data-server-id="${e.guild_id}" class="nav-link py-3 my-1" aria-current="page" data-bs-toggle="tooltip" data-bs-title="${e.guild_name}" data-bs-placement="right" aria-label="${e.guild_name}">\n                <img class="bi pe-none rounded-circle squircle" style="width:48px;height:48px;" role="img" aria-label="${e.guild_name}" src="${e.guild_icon??`https://ui-avatars.com/api/?name=${e.guild_name}`}" />\n            </a >\n        </li > `)}))},resetRoles=e=>{e&&e.rolesContext&&(e.rolesContext=null),$("#server-roles-table").empty()},resetRssFeed=()=>{},resetChannels=()=>{},resetBans=()=>{},resetWarnings=()=>{},resetAll=e=>{resetRoles(e)};$((function(){const e=[];(async()=>{if(console.log("app settings",{dev:isDev(),appUrl:getAppUrl()}),console.log("configuring user"),await configureUser(),null==Cookies.get("access_token"))return void console.log("access token missing");console.log("populating user info and servers");const[t,s]=await Promise.all([getMe(),getGuilds()]);var a,n;null!=t?null!=s?(e.userInfo=t.data,a=t.data,$("#user-name").text(a.username),$("#user-icon").attr("src",a.avatarURL??`https://ui-avatars.com/api/?name=${guild.guild_name}`),updateGuildsSidebar(s.data),document.querySelectorAll('[data-bs-toggle="tooltip"]').forEach((e=>{const t=new bootstrap.Tooltip(e);e.addEventListener("click",(function(){t.hide()}))})),$("#server-sidebar").toggleClass("d-none",!1),n=!1,$("#app-loading").toggleClass("d-none",!n)):console.log("no guilds"):console.log("no user info")})().catch((e=>{console.log(e)})),$(document).on("click","a[data-server-id]",(async function(t){showServerManagement(!1),resetAll();const{parentElm:s,childElm:a}=getParentAndChildElm($(this));if(null==s||null==a)return;const n=$(this).data("server-id");if(isNaN(parseInt(n)))return;showLoadingDiv(!0);const o=await getGuildInfo(n);if(null==o.data)return void showLoadingDiv(!1);e.guildInfo=o.data,setServerSelected(e,n),updateHtmlElements(e,s,a),showServerManagement(!0);const l=document.querySelector('#tablist button[data-bs-target="#info-tab-pane"]');bootstrap.Tab.getInstance(l).show(),setActiveTab(e,"info-tab"),updateInfoTab(e),showLoadingDiv(!1)})),$(document).on("mouseover","a[data-server-id]",(function(t){const s=$(this).data("server-id");if(e.serverId&&e.serverId===s)return;const{parentElm:a,childElm:n}=getParentAndChildElm($(this));null!=a&&null!=n&&toggleActive(a,n)})),$(document).on("mouseout","a[data-server-id]",(function(t){const s=$(this).data("server-id");if(e.serverId&&e.serverId===s)return;const{parentElm:a,childElm:n}=getParentAndChildElm($(this));null!=a&&null!=n&&toggleActive(a,n,!1)})),$("#roles-tab").click((async function(t){if(null==e.serverId)return;const s=await getGuildRoles(e.serverId);if(null==s.data)return;const a=$("#server-roles-table");null!=a&&(a.empty(),s.data.forEach((e=>{a.append(`<tr>\n                    <td>${e.id}</td>\n                    <td>${e.name}</td>\n                    <td><button class="btn btn-outline-primary" \n                        data-type="edit-role" data-role-id="${e.id}" \n                        data-bs-toggle="modal" data-bs-target="#edit-role-modal"\n                        ><i class="fas fa-edit"></i>\n                    </button></td>\n                </tr>`)})))})),$("#rss-tab").click((async function(t){if(null==e.serverId)return;const s=await getGuildRssFeeds(e.serverId);if(null==s.data)return;const a=$("#rss-feeds-table");null!=a&&(a.empty(),s.data.forEach((e=>{a.append(`<tr>\n                    <td>${1===e.enabled?'<i class="fas fa-square-check"></i>':'<i class="fas fa-square-xmark">'}\n                    <td>${e.name}</td>\n                    <td>#${e.channel_name??e.channel_id}</td>\n                    <td>${e.role_name?"@":""}${e.role_name??e.ping_role_id??"N/A"}</td>\n                    <td><a href="${e.rss_url}" target="_blank">${e.rss_url}</td>\n                    <td><button class="btn btn-outline-primary" \n                        data-type="edit-rss" data-feed-id="${e.id}" \n                        data-bs-toggle="modal" data-bs-target="#edit-rss-modal"\n                        ><i class="fas fa-edit"></i>\n                    </button></td>\n                </tr>`)})))})),$("#tablist").on("show.bs.tab",(function(t){const s=t.target.id,a=t.relatedTarget.id;if(s!==a&&(setActiveTab(e,s),"roles-tab"===a))resetRoles(e)})),$(document).on("click",'button[data-type="edit-role"]',(function(t){const s=$(this).data("role-id");isNaN(parseInt(s))||setActiveRole(e,s)})),$(document).on("click",'button[data-type="edit-rss"]',(async function(){const t=$("#edit-rss-form").find(":input, select");t.prop("disabled",!0);const s=$(this).data("feed-id");if(isNaN(parseInt(s)))return;const[a,n,o]=await Promise.all([getGuildFeed(e.serverId,s),getGuildChannels(e.serverId),getGuildRoles(e.serverId)]);null!=a&&null!=n&&null!=o&&(setActiveFeed(e,a),$("#edit-rss-feed-enabled").prop("checked",1===a.data.enabled),$("#edit-rss-name").val(a.data.name),t.prop("disabled",!1))})),$("#edit-rss-modal").on("hidden.bs.modal",(function(){setActiveFeed(e,null),$("#edit-rss-form").get(0).reset()})),$("#edit-role-save",(async function(){null!=e.rolesContext&&null!=e.rolesContext.editRoleId&&await apiPost("saveRoleConfiguration",{})})),$("#edit-role-modal").on("hidden.bs.modal",(function(){setActiveRole(e,null),console.log(e)}))}));